@page
@model ProjectTracker.Pages.IndexModel

@{
    ViewData["Title"] = "Projects";
}


<h1>Projects</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Projects[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Projects[0].Description)
            </th>
            <th></th>
            <th></th>
        </tr>

    </thead>
    <tbody>
        @foreach (var item in Model.Projects)
        {
            <tr>
                <td>
                    <a href="/ProjectDetails?id=@item.Id">@Html.DisplayFor(modelItem => item.Name)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    <div id="chart-@item.Id" class="chart-container" data-project-id="@item.Id"></div>
                </td>
                <td>
                    <form method="post">
                        <button class="btn btn-danger" asp-page-handler="Delete" asp-route-id="@item.Id" type="submit">Delete</button>
                    </form>
                </td>

            </tr>
        }
    </tbody>
</table>

<a class="btn btn-success" role="button" asp-page="./CreateProject">Add New Project</a>


@{
    // Retrieve the progress values for each project
    Dictionary<int, Dictionary<string, double>> projectProgress = new Dictionary<int, Dictionary<string, double>>();
    foreach (var item in Model.Projects)
    {
        projectProgress[item.Id] = Model.ProjectProgress(item.Id);
    }
}

<style>
    .chart-container {
        width: 150px; 
        height: 150px; 
    }
</style>

<script src="https://cdn.plot.ly/plotly-latest.min.js"></script>


<script>
    var projectProgressData = @Html.Raw(Json.Serialize(projectProgress));

    var chartContainers = document.querySelectorAll('.chart-container');
    chartContainers.forEach(function(chartContainer) {
        var projectId = chartContainer.dataset.projectId;
        var progressData = projectProgressData[projectId];
        var values = Object.values(progressData);
        var labels = Object.keys(progressData);

        var chartData = [{
            values: values,
            labels: labels,
            type: 'pie',
            textinfo: 'label+percent',
            textposition: 'inside',
            hoverinfo: 'label+percent',
            texttemplate: "%{label}",
            marker: {
                colors: [
                    'rgb(255, 0, 0)',     // Not Started: Red
                    'rgb(255, 255, 0)',   // In Progress: Yellow
                    'rgb(0, 128, 0)'      // Completed: Green
                ]
            }
        }];

        var layout = {
            margin: { l: 3, r: 3, t: 3, b: 3 },
            showlegend: false
        };

        Plotly.newPlot(chartContainer, chartData, layout);
    });
</script>








