@page
@model ProjectTracker.Pages.IndexModel

@{
    ViewData["Title"] = "Projects";
}


<h1>Projects</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Projects[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Projects[0].Description)
            </th>
            <th></th>
            <th></th>
        </tr>

    </thead>
    <tbody>
        @foreach (var item in Model.Projects)
        {
            <tr>
                <td>
                    <a href="/ProjectDetails?id=@item.Id">@Html.DisplayFor(modelItem => item.Name)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    <div id="chart-@item.Id" class="chart-container" data-project-id="@item.Id"></div>
                </td>
                <td>
                    <form method="post">
                        <button class="btn btn-danger" asp-page-handler="Delete" asp-route-id="@item.Id" type="submit">Delete</button>
                    </form>
                </td>

            </tr>
        }
    </tbody>
</table>

<a class="btn btn-success" role="button" asp-page="./CreateProject">Add New Project</a>



<div id="chart-data" data-project-progress='@Html.Raw(Json.Serialize(Model.ProjectsProgress()))'></div>


@section Scripts {
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <script src="~/js/charts.js" asp-append-version="true"></script>
    <script>// Retrieve the project progress data from the "chart-data" element
        var projectProgressData = document.getElementById('chart-data').dataset.projectProgress;
        projectProgressData = JSON.parse(projectProgressData);

        // Call the function to create project charts
        createProjectCharts(projectProgressData);</script>
}








