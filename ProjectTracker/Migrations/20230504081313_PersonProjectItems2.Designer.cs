// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectTracker.Data;

#nullable disable

namespace ProjectTracker.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230504081313_PersonProjectItems2")]
    partial class PersonProjectItems2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PersonProjectItem", b =>
                {
                    b.Property<int>("PersonListId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectItemsId")
                        .HasColumnType("int");

                    b.HasKey("PersonListId", "ProjectItemsId");

                    b.HasIndex("ProjectItemsId");

                    b.ToTable("PersonProjectItem");
                });

            modelBuilder.Entity("ProjectTracker.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("ProjectTracker.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("ProjectTracker.Models.ProjectItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Completed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Importance")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TimeToComplete")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectItem");
                });

            modelBuilder.Entity("PersonProjectItem", b =>
                {
                    b.HasOne("ProjectTracker.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectTracker.Models.ProjectItem", null)
                        .WithMany()
                        .HasForeignKey("ProjectItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectTracker.Models.Person", b =>
                {
                    b.HasOne("ProjectTracker.Models.Project", null)
                        .WithMany("Persons")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("ProjectTracker.Models.ProjectItem", b =>
                {
                    b.HasOne("ProjectTracker.Models.Project", null)
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("ProjectTracker.Models.Project", b =>
                {
                    b.Navigation("Persons");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
